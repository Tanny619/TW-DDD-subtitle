1
00:00:00,000 --> 00:00:01,536
好的，我们接下来要那样做了

2
00:00:01,792 --> 00:00:06,400
但在这之前，我们希望介绍几个之前没讲过的概念

3
00:00:06,912 --> 00:00:07,936
因为

4
00:00:08,704 --> 00:00:10,240
当我们进入"BuildReservationAttempt"这里

5
00:00:12,288 --> 00:00:14,336
我们 build 是基于

6
00:00:14,848 --> 00:00:18,944
 Train 这个层面，而不是 Coach 这个层面

7
00:00:19,200 --> 00:00:22,016
我们直接调用了所有的 seats

8
00:00:22,528 --> 00:00:27,136
所以怎样理解这里的 coach 的概念呢？你的想法是什么？

9
00:00:47,360 --> 00:00:53,504
基本上，元数据中每个座位的名字就像 a1，a2，a3，b4组成

10
00:00:53,760 --> 00:00:58,112
a 是每个 coach 的名字

11
00:00:58,368 --> 00:01:00,160
这样我才能隐式的找出 seat 与所属 coach

12
00:01:05,280 --> 00:01:07,328
是的，没错。这是个好主意

13
00:01:08,352 --> 00:01:10,912
但我们要怎么介入它呢？

14
00:01:11,168 --> 00:01:11,680
就现在

15
00:01:12,192 --> 00:01:14,240
下一步该怎么做？

16
00:01:17,824 --> 00:01:22,688
是的，没错。如果现在键盘在你手里的话

17
00:01:22,944 --> 00:01:24,480
要如何根据你建议的开始呢？

18
00:01:31,904 --> 00:01:32,672
没错

19
00:01:34,976 --> 00:01:37,280
当然可以。但我们得从一个小的测试开始着手

20
00:01:37,536 --> 00:01:40,864
从 train 那里我们能获得....

21
00:01:41,120 --> 00:01:43,680
例如，我们会校验 train 中暴露出的 coaches 

22
00:01:43,936 --> 00:01:46,496
例如

23
00:01:47,520 --> 00:01:50,080
因为我们都热衷于

24
00:01:50,592 --> 00:01:51,360
TDD

25
00:01:52,128 --> 00:01:53,152
而且

26
00:01:53,408 --> 00:01:54,944
我们想要...

27
00:01:55,200 --> 00:01:59,040
去创建...所以让我们来增加一个 TreeShould 类...should...fixture...

28
00:01:59,296 --> 00:02:02,368
到目前为止我们只有一些 architecture 测试

29
00:02:03,136 --> 00:02:05,440
那完全是系统行为

30
00:02:05,696 --> 00:02:07,488
.....所以我们目前有三个测试

31
00:02:07,744 --> 00:02:12,608
到了这里，我要说得是，这是我们的第一个单元测试

32
00:02:13,632 --> 00:02:15,168
是时候去...

33
00:02:15,424 --> 00:02:18,496
也许...Train 应该暴露出 coaches...之类的东西... 

34
00:02:20,032 --> 00:02:21,056
所以我们在这里拿到了 Train

35
00:02:22,080 --> 00:02:24,384
所以 TrainShould 这里应该暴露出 coaches? 

36
00:02:32,064 --> 00:02:34,112
我得移动到它上面去不然没法...

37
00:02:37,696 --> 00:02:38,976
应该是...expose_coaches

38
00:02:40,256 --> 00:02:40,768
应该是...expose_coaches

39
00:02:41,792 --> 00:02:42,304
Okay..

40
00:02:46,656 --> 00:02:52,800
对...没错....完全跟那个有关

41
00:02:53,056 --> 00:02:56,896
实际上，我脑海中有一些 coach 的新业务规则....even he first to fix by then

42
00:02:57,408 --> 00:02:57,920
但是

43
00:02:58,432 --> 00:02:59,968
由于资金的原因

44
00:03:00,224 --> 00:03:06,368
在他脑海中有了一些东西来支撑他的新业务规则

45
00:03:06,624 --> 00:03:07,136
例如

46
00:03:07,392 --> 00:03:08,416
我们不应该

47
00:03:08,928 --> 00:03:13,024
养活多于40%的 Coache

48
00:03:13,536 --> 00:03:14,048
打个比方

49
00:03:14,304 --> 00:03:18,912
and step like so it we need the population through to make it

50
00:03:30,432 --> 00:03:31,712
我们需要，到目前为止

51
00:03:31,968 --> 00:03:35,296
我们需要在 Coach 上做些操作

52
00:03:35,552 --> 00:03:37,856
我们需要那个

53
00:03:38,112 --> 00:03:38,880
回答是肯定的

54
00:03:39,136 --> 00:03:45,280
如果你想封装它全部的实现细节以此保证私有性

55
00:03:45,536 --> 00:03:46,048
就不要那么写

56
00:03:46,560 --> 00:03:48,608
好了

57
00:03:49,120 --> 00:03:51,168
我要在这做一些解释因为我使用了

58
00:03:52,192 --> 00:03:53,984
snake name

59
00:03:54,240 --> 00:03:56,288
因为

60
00:03:56,544 --> 00:04:02,688
我们用他来mock 测试场景中的一些情况，这是一个有着10个元素的topology table

61
00:04:02,944 --> 00:04:09,088
so he will probably have built a spawning...it's a way to qualify the topology 

62
00:04:09,344 --> 00:04:14,976
而且很合适因为我知道这个这个 topology table 中

63
00:04:15,232 --> 00:04:17,280
有两个 coach 

64
00:04:18,048 --> 00:04:19,328
我们尝试给每个 coach 预定座位 所以这也是为什么用它的原因 

65
00:04:19,584 --> 00:04:22,912
所以在你的测试中现在关联到了 Train

66
00:04:23,424 --> 00:04:25,984
Ok 在 Train 中提供了....

67
00:04:26,496 --> 00:04:28,800
一个由 AdaptedTrainTopology 提供的 seat 的集合

68
00:04:29,824 --> 00:04:30,336
topology

69
00:04:30,592 --> 00:04:31,104
是的

70
00:04:31,872 --> 00:04:32,896
所以我们应该 check

71
00:04:33,920 --> 00:04:35,712
train...coaches...

72
00:04:36,480 --> 00:04:37,248
抱歉

73
00:04:39,552 --> 00:04:40,064
而且

74
00:04:40,576 --> 00:04:43,136
我不喜欢 Coach 这个类因为现在它还不存在

75
00:04:45,184 --> 00:04:46,464
我们得 check

76
00:04:48,256 --> 00:04:49,280
长度为2

77
00:04:49,792 --> 00:04:52,608
的集合...因为在 train topology 中有两个 coache

78
00:04:55,424 --> 00:04:59,264
也许你还需要 check 每个 coach 有10个座位

79
00:05:01,056 --> 00:05:07,200
这很长当我认为应该是个 Dictionary，例如 coaches["A"], coaches["B"]

80
00:05:08,992 --> 00:05:09,760
Coaches["A"]

81
00:05:10,528 --> 00:05:12,576
the seats...点 seats

82
00:05:12,832 --> 00:05:14,880
长度为10

83
00:05:15,136 --> 00:05:17,184
因为每个 coach 都...

84
00:05:17,440 --> 00:05:19,488
Ok

85
00:05:20,000 --> 00:05:24,608
现在直接把 Train 中的暴露出去吧

86
00:05:24,864 --> 00:05:27,168
好，我们现在开始生成一些代码

87
00:05:28,448 --> 00:05:28,960
 ok

88
00:05:30,752 --> 00:05:32,544
这里...你刚提到的 Dictionary

89
00:05:35,360 --> 00:05:36,128
Name

90
00:05:39,200 --> 00:05:39,968
Coach

91
00:05:41,248 --> 00:05:42,272
目前还不存在的

92
00:05:42,528 --> 00:05:45,088
同样的，你也要创建

93
00:05:45,344 --> 00:05:45,856


94
00:05:46,112 --> 00:05:48,672
Coach 类...没错，我到时候会创建它的...

95
00:05:50,976 --> 00:05:53,792
所以现在 Train 有了

96
00:05:54,304 --> 00:05:55,840
一个 coach 集合

97
00:05:56,352 --> 00:05:57,632
所以我现在可以..

98
00:05:57,888 --> 00:05:59,680
从 Dictionary 入手

99
00:06:02,240 --> 00:06:08,384
如果我们有足够的时间，我们不仅要作为 Dictionary 暴露出去，还要把它变为只读的

100
00:06:08,640 --> 00:06:10,944
或者其他什么好的概念

101
00:06:11,968 --> 00:06:13,760
代理类之类的...

102
00:06:14,016 --> 00:06:17,856
但因为我们想要展示出更多其他的东西在这

103
00:06:18,624 --> 00:06:20,672
所以....

104
00:06:20,928 --> 00:06:22,464
循环遍历Seats

105
00:06:22,720 --> 00:06:26,048
So here we dig into the concept D I G would be

106
00:06:26,304 --> 00:06:31,424
Ok，我现在拿到了一个 seats 的集合

107
00:06:31,936 --> 00:06:34,752
每个 seat 上都隐式的含有 coach 的名字

108
00:06:35,520 --> 00:06:39,104
所以我只需要 check 每个作为上是不是已经安排了教练

109
00:06:39,360 --> 00:06:40,128
通过他们的名字

110
00:06:40,640 --> 00:06:43,200
因为座位上含有 coach 的名字

111
00:06:43,712 --> 00:06:47,296
如果 Coach 不在这个 Dictionary 中

112
00:06:48,064 --> 00:06:49,344
我们就把他

113
00:06:49,600 --> 00:06:50,112
添加进去

114
00:06:50,624 --> 00:06:51,392
添加到 dictionary 中

115
00:06:54,464 --> 00:06:54,976
抱歉？

116
00:06:59,072 --> 00:07:05,216
是的，我们可以用 link...对...在最开始的逻辑中我们查询了 seats，I prefer to show without thinking

117
00:07:07,008 --> 00:07:07,776
而且

118
00:07:08,032 --> 00:07:13,920
通过实例化一个新的 Coach...然后提供给他名字...

119
00:07:17,248 --> 00:07:17,760
Ok

120
00:07:18,272 --> 00:07:24,416
我们轮询了Train 中的每个 seat

121
00:07:24,672 --> 00:07:29,536
我们将相关的 coach 也添加进了 Dictionary

122
00:07:30,048 --> 00:07:31,328
之后我们不得不

123
00:07:31,584 --> 00:07:32,352
添加 seat（给每个 coach）

124
00:07:35,424 --> 00:07:36,448
coach 名称

125
00:07:40,800 --> 00:07:44,384
第一步第二步都是将 seat 添加进 coach

126
00:07:47,968 --> 00:07:48,736
So...coaches...

127
00:07:49,248 --> 00:07:51,296
...coaches...数组...seat

128
00:07:51,552 --> 00:07:52,320
seat 点 coach name

129
00:07:53,344 --> 00:07:54,368


130
00:07:54,624 --> 00:07:55,648
I introduced available

131
00:07:57,440 --> 00:07:58,720
我们叫他 newCoach？

132
00:08:02,304 --> 00:08:02,816
可以

133
00:08:03,328 --> 00:08:04,352
没问题

134
00:08:07,424 --> 00:08:08,192
newCoach

135
00:09:08,960 --> 00:09:09,472
add...seat...

136
00:08:12,544 --> 00:08:18,688
哦，你做这个是为了使用 lambda 表达式？你可以先让它工作然后我们再来重构

137
00:08:19,712 --> 00:08:22,272
没问题....当然可以...

138
00:08:27,648 --> 00:08:28,928
现在....

139
00:08:30,208 --> 00:08:33,024
Ok. Ok

140
00:08:33,280 --> 00:08:35,072
实际上你不得不 ......我得先重命名它

141
00:08:35,328 --> 00:08:41,472
coache 已经在这了

142
00:08:41,728 --> 00:08:44,288
coach..coach....coach...and on that coach..你已经设置过 seats 了

143
00:08:44,800 --> 00:08:45,312
So...ok

144
00:08:47,872 --> 00:08:49,408
接下来我要...

145
00:08:50,432 --> 00:08:52,480
假设这里我已经有seats这个 list 了

146
00:08:55,040 --> 00:08:55,552
So you are

147
00:08:56,064 --> 00:09:00,928
What glue do you use to make USB data switch for handling unit

148
00:09:01,184 --> 00:09:01,952
we will need to make a coach

149
00:09:03,232 --> 00:09:09,376
A nice place to to find our list of seats I would say

150
00:09:11,168 --> 00:09:11,680
但是

151
00:09:11,936 --> 00:09:12,704
这里

152
00:09:12,960 --> 00:09:15,520
有些东西让我有点烦...但

153
00:09:16,032 --> 00:09:16,800
你先完成吧

154
00:09:17,056 --> 00:09:19,360
我想看到它变绿....

155
00:09:21,152 --> 00:09:22,432
变绿...

156
00:09:27,552 --> 00:09:30,624
ok，他们都变绿了

157
00:09:33,184 --> 00:09:36,000
哦不不不，我不认为它编译通过了

158
00:09:37,024 --> 00:09:37,792
就像这些一样

159
00:09:38,560 --> 00:09:44,704
Oh, yeah...暴露出的 seats 的大小....topology....封装...还有...

160
00:09:48,032 --> 00:09:48,800
seats

161
00:09:49,056 --> 00:09:50,336
现在应该变绿了

162
00:09:55,968 --> 00:09:58,272
OK, 我并不是特别喜欢这种...

163
00:09:58,784 --> 00:09:59,296
我们

164
00:09:59,808 --> 00:10:03,136
添加了一个 seat 给 coach...我们改变了他

165
00:10:03,392 --> 00:10:04,416
但实际上

166
00:10:04,672 --> 00:10:05,952
如果你有足够的时间

167
00:10:06,464 --> 00:10:08,000
这里还有一些事情应该去做

168
00:10:09,536 --> 00:10:12,864
那就是让所有事情变得 immutable

169
00:10:13,888 --> 00:10:15,680
因为我们所做的事其实...

170
00:10:15,936 --> 00:10:21,056
基于当你想要预定...我们想要预定一些座位，我们拿到了 train apology

171
00:10:21,312 --> 00:10:23,360
但我们并不是他的所有者

172
00:10:23,616 --> 00:10:25,152
这是从外部来的数据

173
00:10:25,664 --> 00:10:26,432
我们只是在他上面工作

174
00:10:27,712 --> 00:10:32,576
而且我并不希望我们冒某种危险去和它保持关联

175
00:10:33,344 --> 00:10:34,368
因为这很愚蠢

176
00:10:35,136 --> 00:10:41,280
而且事实是当我拿到了 train apology，它应该是不变的，我能做的只有在他上面

177
00:10:42,304 --> 00:10:45,120
去查询某些信息， 或者去创建一个reservation attempt

178
00:10:45,376 --> 00:10:47,680
但我并不希望我的同事

179
00:10:47,936 --> 00:10:51,264
或者新加入这个 team 的人

180
00:10:51,520 --> 00:10:56,128
to...to...break that by introducing a cache and a state well

181
00:10:56,384 --> 00:10:57,152
我不想这样

182
00:10:58,176 --> 00:11:04,320
所以如果有时间我会让所有事情变得 immutable，train，coach都是这样

183
00:11:04,576 --> 00:11:06,112
seats 也是

184
00:11:06,368 --> 00:11:08,160
只有

185
00:11:08,416 --> 00:11:11,232
一件事是 mutable 的，那就是 reservation attempt 

186
00:11:12,512 --> 00:11:17,632
之前的 reservation attempt 是一个有生命周期的实体

187
00:11:17,888 --> 00:11:21,472
但是随着时间变化

188
00:11:21,728 --> 00:11:25,312
最后我会将 reservation attemp 演变成 reservation

189
00:11:25,568 --> 00:11:27,360
而且reseravation 也是 immutable 的

190
00:11:27,616 --> 00:11:30,432
从 reservation attemp 到 reservation

191
00:11:30,688 --> 00:11:32,224
ok，有问题吗？

192
00:11:40,160 --> 00:11:46,304
抱歉? 是的...是的...当然....这也是个理由

193
00:11:46,560 --> 00:11:47,840
如果我们回到

194
00:11:48,096 --> 00:11:49,376
addseats

195
00:11:49,888 --> 00:11:54,496
我们想对 seats 做的是一个叫做 closure of operation 的事情

196
00:11:54,752 --> 00:11:56,288
这意味着一个coach

197
00:11:56,544 --> 00:12:00,128
将会有一个 addSeats 方法，所以我可以添加 seats 给 coach

198
00:12:00,384 --> 00:12:03,712
But instead of mutating me the coache instance

199
00:12:03,968 --> 00:12:06,784
What we would like is to for that guy to reach on me

200
00:12:07,296 --> 00:12:08,576
The New Coach

201
00:12:08,832 --> 00:12:10,112
a new sort of coach installs

202
00:12:10,368 --> 00:12:10,880
所以

203
00:12:11,136 --> 00:12:14,464
我调用了一个 coach 实例上的 addSeats 方法

204
00:12:14,976 --> 00:12:18,304
它将返回给我一个包含了 seat 的

205
00:12:18,560 --> 00:12:20,096
新的 coach 对象

206
00:12:20,352 --> 00:12:26,240
但不改变前一个实例

207
00:12:26,496 --> 00:12:27,008
听着

208
00:12:27,520 --> 00:12:28,544
所以

209
00:12:28,800 --> 00:12:33,408
The benefits is the first time with ability	for of course or for passion but also reduce the coupling

210
00:12:33,664 --> 00:12:36,736
简单的移动代码

211
00:12:36,992 --> 00:12:38,272
这里的 coach

212
00:12:38,784 --> 00:12:40,064
 代表他自己

213
00:12:40,320 --> 00:12:44,416
you know...method on the coach which are mean you have the source of coach

214
00:12:44,928 --> 00:12:51,072
这样，如果我想要移动它比之前 coach 中关联一个新的类型那种方式要简单的多

215
00:12:51,328 --> 00:12:52,608
就像这样

216
00:12:53,120 --> 00:12:54,656
Ok

217
00:12:55,168 --> 00:12:55,936
Ok yeah

218
00:13:10,784 --> 00:13:16,928
 在任何情况下与领域专家交流都是一件重要的事

219
00:13:17,184 --> 00:13:19,232
不幸的是，我们之前在做这个 session 时都会有个领域专家

220
00:13:19,488 --> 00:13:20,512
就在我们旁边

221
00:13:20,768 --> 00:13:22,560
然后我们问很多问题记下来很多东西

222
00:13:22,816 --> 00:13:24,864
所以你脑海里有很多隐式的..你知道的...在你脑海里

223
00:13:25,120 --> 00:13:28,704
是的，没错，你们应该有这种讨论

224
00:13:28,960 --> 00:13:30,496
但是

225
00:13:31,264 --> 00:13:37,408
我想说的是这里有很多实现细节

226
00:13:37,664 --> 00:13:40,480
这是对所有人的，我不想讨论对于

227
00:13:40,736 --> 00:13:44,064
我不是 owner 的和跟状态有关的东西

228
00:13:46,112 --> 00:13:46,880
我不是

229
00:13:47,136 --> 00:13:49,440
train topology 的所有者，我只是一个用户

230
00:13:49,696 --> 00:13:53,024
每次一个请求返回给我，

231
00:13:53,536 --> 00:13:55,584
拿到一份快照

232
00:13:56,096 --> 00:13:59,168
通过我的的领域模型，然后去做一个 reservation

233
00:14:00,960 --> 00:14:01,472
所以

234
00:14:14,784 --> 00:14:20,160
是的，当然

235
00:14:21,184 --> 00:14:27,328
Ok I think maybe it's not pop up...yeah...absolutely...okay...so...instead of changing the coach here 

236
00:14:27,584 --> 00:14:29,888
然后转换到一个新的 coach 的实例上去吧

237
00:14:30,144 --> 00:14:32,704
让它在这里返回一个 coach

238
00:14:34,240 --> 00:14:39,616
So I didn't seats it doesn't mutate the existing coach which will only return 

239
00:14:39,872 --> 00:14:40,640
一个新的 coach 实例

240
00:14:43,456 --> 00:14:43,968
Coach

241
00:14:44,224 --> 00:14:45,248
Ok

242
00:14:45,504 --> 00:14:46,272
和 seat 的名称...

243
00:14:48,576 --> 00:14:49,344
还有什么？

244
00:14:49,856 --> 00:14:50,624
一个集合？

245
00:14:50,880 --> 00:14:51,392
一个新的集合？

246
00:14:53,440 --> 00:14:54,208
是的

247
00:14:54,464 --> 00:15:00,608
Acutally session is best form session of three hours we have made in paris ^&*()?

248
00:15:00,864 --> 00:15:04,960
expect outstage our left floor forward

249
00:15:05,216 --> 00:15:11,360
I guess museum story with tons of stuff so 

250
00:15:11,616 --> 00:15:14,944
we had to pick a fight for that short version of two hours... 这还有很多我们能改进的地方

251
00:15:16,992 --> 00:15:21,856
So we can't find that the coach seats a train really value types

252
00:15:22,112 --> 00:15:22,880
所以我们现在...

253
00:15:23,136 --> 00:15:27,488
开始只让 coach 变为 immutable 的部分

254
00:15:29,536 --> 00:15:30,304
也许

255
00:15:31,584 --> 00:15:34,400
这确实还有很多事情需要改进...然后为了保证

256
00:15:35,168 --> 00:15:36,448
它的私有性...也许

257
00:15:39,008 --> 00:15:39,520
是的

258
00:15:40,288 --> 00:15:41,312
避免

259
00:15:42,336 --> 00:15:43,616
一些大的问题

260
00:15:45,408 --> 00:15:48,224
去实现一个跟之前一样的构造函数

261
00:15:48,992 --> 00:15:51,040
我现在可以去修复它

262
00:15:51,552 --> 00:15:52,064
它的核心

263
00:15:52,576 --> 00:15:53,088
是的，很好

264
00:16:01,024 --> 00:16:01,792
因为那些已经存在了的代码

265
00:16:02,048 --> 00:16:02,816
正在运行

266
00:16:03,072 --> 00:16:04,352
所以...有些步骤你知道的

267
00:16:04,608 --> 00:16:09,472
所以...得修复....这里...

268
00:16:10,496 --> 00:16:15,104
所以是时候去修复它了

269
00:16:15,360 --> 00:16:16,896
所以这里我们要拿到 coach

270
00:16:17,408 --> 00:16:18,176
去添加 seats

271
00:16:19,456 --> 00:16:19,968
所以

272
00:16:20,224 --> 00:16:21,248
通过它...newCoach

273
00:16:21,504 --> 00:16:24,320
没错, newcCoach...通过 Dictionary

274
00:16:24,832 --> 00:16:26,880
 去跟踪它

275
00:16:27,648 --> 00:16:30,976
所以现在测试还是红的吗？

276
00:16:31,232 --> 00:16:35,328
但我猜当我在 Dictionary 中

277
00:16:35,584 --> 00:16:37,888
保存了newCoach 的值之后，测试又会变回为绿的

278
00:16:38,912 --> 00:16:39,424
newCoach

279
00:16:41,728 --> 00:16:42,240
没错

280
00:16:42,752 --> 00:16:44,032
Inevitable

281
00:17:03,744 --> 00:17:04,512
Yeah...yeah

282
00:17:11,936 --> 00:17:13,216
在测试里

283
00:17:15,008 --> 00:17:17,312
和 coach 一起...okay

284
00:17:24,736 --> 00:17:25,248
这里

285
00:17:26,272 --> 00:17:28,320
你重新回到单元测试

286
00:17:37,280 --> 00:17:38,560
是的是的，没错

287
00:17:38,816 --> 00:17:40,352
完全正确

288
00:17:46,240 --> 00:17:52,384
we will do that because we would like to show you a picture second architecture and lots of other steps...but yes you're right...you're right

289
00:17:56,992 --> 00:18:02,880
没错，绝对是。 但那是下一个点， 实际上我们有个一个 Train 

290
00:18:03,648 --> 00:18:05,184
已经对外暴露出了 seats 的集合， 并且也尝试去暴露coach 的集合

291
00:18:05,440 --> 00:18:09,536
因为所有的 seats 都应该属于 coach，所以接下来我们要做的是

292
00:18:09,792 --> 00:18:13,376
在 Train 中替换掉添加重复的集合

293
00:18:13,632 --> 00:18:15,424
取而代之的是projection

294
00:18:15,936 --> 00:18:18,240
然后在 Train 中 seats 的集合一定是

295
00:18:18,496 --> 00:18:21,312
每个 coach 的所有的 seats 的projection

296
00:18:21,312 --> 00:18:21,568
在 Train 中

297
00:18:21,568 --> 00:18:22,592
让我们动手吧

298
00:18:22,848 --> 00:18:25,920
select mini something like that

299
00:18:26,432 --> 00:18:27,712
coaches

300
00:18:28,992 --> 00:18:30,016
用每个 coach

301
00:18:30,528 --> 00:18:33,088
 返回他的值

302
00:18:33,600 --> 00:18:34,624
SelectMany

303
00:18:40,256 --> 00:18:41,024
对于每个 seat 来说

304
00:18:41,536 --> 00:18:43,328
改成 c

305
00:18:43,584 --> 00:18:44,352
c dot

306
00:18:44,608 --> 00:18:45,120
seats

307
00:18:48,704 --> 00:18:49,728
toList

308
00:18:50,240 --> 00:18:50,752
to a newList

309
00:18:52,800 --> 00:18:56,384
这样就又把他们连在一起但这次是projection

310
00:18:56,640 --> 00:18:57,408
我们用

311
00:18:57,664 --> 00:18:59,456
每个 coach 身上的所有 seats

312
00:18:59,968 --> 00:19:02,784
然后我们返回了它对于整个 train 而言

313
00:19:03,296 --> 00:19:06,880
所以我们不需要重新 set 它了，因为

314
00:19:07,136 --> 00:19:07,905
它现在是一个属性了

315
00:19:12,513 --> 00:19:13,025
Ok

316
00:19:16,609 --> 00:19:18,913
所以，我们编译了 coach....

317
00:19:19,169 --> 00:19:20,705
看起来不错

318
00:19:22,497 --> 00:19:25,313
也许我们能修复一个 bug

319
00:19:25,569 --> 00:19:26,337
你觉得怎么样

320
00:19:27,873 --> 00:19:28,897
可以

321
00:19:30,433 --> 00:19:33,249
Absolutely...villages?...yes

322
00:19:33,505 --> 00:19:36,577
我们是想将 findAvailableSeats or the buildReservationAttempt 

323
00:19:36,833 --> 00:19:37,857
移动到 coach 里去

324
00:19:38,113 --> 00:19:40,161
因为如果我们在 train 中调用它

325
00:19:40,929 --> 00:19:42,977
就没办法

326
00:19:43,233 --> 00:19:46,817
合适的...只有一种比较蹩脚的办法

327
00:19:47,073 --> 00:19:48,097
所以我们将它 delegate 到

328
00:19:48,353 --> 00:19:51,169
Coach 中去吧。所以我把这个

329
00:19:51,425 --> 00:19:51,937
删掉

330
00:19:52,193 --> 00:19:55,265
所以我们的测试总是red-green

331
00:19:55,521 --> 00:19:56,801
这样的节奏

332
00:19:58,593 --> 00:20:02,433
现在让我们回到 WebTicket 中去

333
00:20:02,689 --> 00:20:06,017
而且就像你建议的那样

334
00:20:07,041 --> 00:20:07,809
也许

335
00:20:08,321 --> 00:20:11,649
buildReservationAttempt 主要负责验证

336
00:20:12,929 --> 00:20:15,489
and to tweet

337
00:20:16,257 --> 00:20:17,025
一些新的东西

338
00:20:19,329 --> 00:20:23,425
也许我们能改变算法

339
00:20:23,937 --> 00:20:24,705
but respect algorithm

340
00:20:24,961 --> 00:20:26,753
所以我基于 coach 来做这件事

341
00:20:28,801 --> 00:20:30,337
让我们把

342
00:20:30,593 --> 00:20:32,897
查找作为的逻辑

343
00:20:33,153 --> 00:20:34,177
放在 coach 这层上

344
00:20:36,225 --> 00:20:37,249
所以我们来 for 循环每个 coach

345
00:20:38,273 --> 00:20:43,393
所以，真的要做一件相同的事，buildReservationAttemp, 没错，我喜欢用这个

346
00:20:44,929 --> 00:20:45,697
please coach

347
00:20:46,209 --> 00:20:48,257
beat me build reservation attemp 如果你可以的话

348
00:20:49,025 --> 00:20:49,537
Ok

349
00:20:52,865 --> 00:20:55,681
然后返回给你一个 reservcationAttempt

350
00:20:55,937 --> 00:20:58,241
ReservcationAttempt

351
00:20:58,753 --> 00:21:00,289
Is reservationAttempt

352
00:21:00,801 --> 00:21:01,313
Adele

353
00:21:06,945 --> 00:21:08,481
然后...如果...reservationAttempt

354
00:21:08,737 --> 00:21:09,761
IsFulfilled

355
00:21:10,017 --> 00:21:10,529
Ok

356
00:21:11,297 --> 00:21:13,089
然后返回

357
00:21:13,857 --> 00:21:15,649
reservationAttempt

358
00:21:15,905 --> 00:21:20,513
如果不是, 我们继续遍历下一个 coach 去做相同的事

359
00:21:20,769 --> 00:21:22,049
至少有一位 coach

360
00:21:22,561 --> 00:21:25,633
我们可以拿到他的另一个 reservationAttempt，我们很高兴看到这样

361
00:21:26,401 --> 00:21:26,913
所以

362
00:21:27,169 --> 00:21:30,753
这部分代码实际上我希望

363
00:21:31,009 --> 00:21:33,057
完全移动到

364
00:21:34,081 --> 00:21:34,593


365
00:21:36,641 --> 00:21:38,433
让我们创建一个方法

366
00:21:44,833 --> 00:21:46,369
好的，实际上我并不是很喜欢剪切复制，

367
00:21:46,881 --> 00:21:49,697
但这里

368
00:21:51,489 --> 00:21:52,769
倒也合乎情理

369
00:21:53,025 --> 00:21:59,169
好了，现在变绿了...所以我们刚才修复了一个 bug，也许你可以"红，绿，重构"

370
00:22:02,497 --> 00:22:04,801
将 buildReservationAttempt 放到 train 这个层级上去

371
00:22:05,313 --> 00:22:08,129
we still...let some code

372
00:22:08,385 --> 00:22:08,897
所以

373
00:22:09,409 --> 00:22:12,225
基于seat 上的东西

374
00:22:12,737 --> 00:22:14,785
这里我们有一些

375
00:22:15,041 --> 00:22:20,673
...copy过来的代码，所以让我们用 linq 来把它替换掉吧

376
00:22:22,209 --> 00:22:26,305
So take me please 所有的 seats where BookingRef 是空的

377
00:22:26,561 --> 00:22:29,121
空的...string 点  isNullOrEmpty

378
00:22:29,889 --> 00:22:36,033
我们是否应该新创建一个方法

379
00:22:36,289 --> 00:22:40,897
Take the number of seatsRequestCount

380
00:22:41,153 --> 00:22:43,457
所以这里我们 project 了一个 可用的

381
00:22:44,481 --> 00:22:44,993
seats

382
00:22:45,505 --> 00:22:51,137
的集合，然后我们还有一个所有 seats 的集合，这样我们就能

383
00:22:51,649 --> 00:22:57,793
传1，3，4 任何我要求的数字...我还要把这里也替换掉...

384
00:22:58,049 --> 00:23:01,377
它确实做了在 seats 中和 foreach loop 相同的事

385
00:23:02,657 --> 00:23:05,217
想那么做你不得不.....

386
00:23:05,985 --> 00:23:07,777
...不得不.....选中全部

387
00:23:08,033 --> 00:23:12,385
移除掉了

388
00:23:13,665 --> 00:23:14,177
Ok

389
00:23:15,969 --> 00:23:17,761
Ok 你移除掉了

390
00:23:19,297 --> 00:23:20,065
这儿

391
00:23:22,369 --> 00:23:23,137
Oops

392
00:23:24,161 --> 00:23:24,673
我的错

393
00:23:24,929 --> 00:23:25,697
现在没事了

394
00:23:25,953 --> 00:23:32,097
So what we can do maybe seems seat constructor missed up anything to attract mosquitoes

395
00:23:32,353 --> 00:23:37,217
things so here is quite difficult with

396
00:23:40,545 --> 00:23:42,081
Inshallah ok 

397
00:23:46,177 --> 00:23:51,297
目标方法应该就叫

398
00:23:51,809 --> 00:23:52,577
isAvailable

399
00:23:53,601 --> 00:23:54,881
因为我们就是在 seats 上调用这个方法的

400
00:23:55,649 --> 00:23:57,441
so non-static public 

401
00:23:58,721 --> 00:23:59,489
然后我们将

402
00:23:59,745 --> 00:24:03,841
抽取方法并将它移动到 seat 中去

403
00:24:04,097 --> 00:24:04,609
所以

404
00:24:05,121 --> 00:24:05,889
移动它

405
00:24:06,401 --> 00:24:10,753
So here now if you can zoom on the link us with a request 

406
00:24:11,265 --> 00:24:15,361
light on the seats and we take all the seats that are available

407
00:24:15,873 --> 00:24:18,945
And we take the first number that we need it

408
00:24:25,601 --> 00:24:30,209
我们需要它. That's we introduced that eariler for the each fulfilled 

409
00:24:31,489 --> 00:24:36,353
for another reservation attempt I should to be

410
00:24:36,609 --> 00:24:38,913
to be able to say fulfilled obtain a good reservation it's design choice...yeah...

411
00:24:39,937 --> 00:24:40,961
Ok

412
00:24:41,217 --> 00:24:43,777
我们很高兴修复了一个 bug

413
00:24:44,033 --> 00:24:49,409
 修复 bug 能让我们的代码有一些小的提升
