1
00:30:26,000 --> 00:30:28,304
Ok, something better you?

2
00:30:29,072 --> 00:30:29,584
Yep

3
00:30:30,096 --> 00:30:31,888
Can you see what's still bothering

4
00:30:32,656 --> 00:30:35,728
Ok it's still very procedural code, one method, too screen high

5
00:30:36,240 --> 00:30:39,824
doing this and then doing that and then do this ok

6
00:30:40,592 --> 00:30:41,616
Collection script

7
00:30:45,968 --> 00:30:50,832
Yeah, Here "get the train" is useless

8
00:30:51,088 --> 00:30:52,624
so we cut it

9
00:30:53,136 --> 00:30:54,160
Yeah, It is better

10
00:30:54,416 --> 00:30:57,488
Now, the problem is we

11
00:30:58,256 --> 00:31:04,400
still share the "train", but this one normally return the domain object, not a kind of JSON.

12
00:31:05,936 --> 00:31:07,984
We will see that a trend that have a physical of proxy

13
00:31:09,264 --> 00:31:15,408
to external web API will make into

14
00:31:15,664 --> 00:31:20,784
a adaptor, for in the portal adapter pattern that we will 

15
00:31:21,296 --> 00:31:27,440
Have another of view before that, so don't worry if you are not aware of that, instead of returning

16
00:31:27,696 --> 00:31:30,512
a string of JSON let's make that

17
00:31:30,768 --> 00:31:32,560
method return as a train stones. Yeah

18
00:31:33,072 --> 00:31:39,216
So that we can get rid of JSON within the method

19
00:31:39,728 --> 00:31:44,592
To make it more domain and purely and not mixing technical staff with

20
00:31:44,848 --> 00:31:46,896
function domain stuff. Ok for you? Yes. Still Ok for you?

21
00:31:50,992 --> 00:31:53,040
So I discovered that the file

22
00:31:53,296 --> 00:31:55,344
There is a constructor of the train

23
00:31:55,600 --> 00:32:01,744
The train, ok, we see a lot of stuff to deserialize JSON

24
00:32:02,768 --> 00:32:05,328
This is the file actually

25
00:32:05,584 --> 00:32:09,936
This one is not choosed

26
00:32:16,080 --> 00:32:17,872
Delete, OK

27
00:32:19,152 --> 00:32:22,480
this one is never used too

28
00:32:24,016 --> 00:32:24,528
Let's delete it also

29
00:32:25,040 --> 00:32:25,808


30
00:32:26,064 --> 00:32:29,648
also this one is grey

31
00:32:31,952 --> 00:32:35,280
You can split into various files maybe.. Yeah, let's delete

32
00:32:37,584 --> 00:32:38,864
So here we are in the

33
00:32:39,888 --> 00:32:40,656
Train

34
00:32:40,912 --> 00:32:41,680
Class

35
00:32:42,192 --> 00:32:47,312
Yeah, and Train class does not have tons of behaviors I would say except

36
00:32:47,568 --> 00:32:49,872
by parsing a

37
00:32:50,128 --> 00:32:53,200
JSON

38
00:32:53,712 --> 00:32:55,248
My magic resharper

39
00:32:55,760 --> 00:32:56,272
Ok

40
00:32:57,296 --> 00:32:59,856
we use a lambda. OK. Yeah.

41
00:33:00,112 --> 00:33:06,256
I will move this one. There are the members of ... the properties and field of ... Ok.

42
00:33:06,512 --> 00:33:12,400
 Then all we have its a constructor. Only technical stuff.

43
00:33:13,680 --> 00:33:14,704


44
00:33:14,960 --> 00:33:15,984
What would you suggest

45
00:33:20,592 --> 00:33:21,616
If I drink

46
00:33:22,128 --> 00:33:23,152
[Audience Question]

47
00:33:30,320 --> 00:33:35,696
There is better location to do some JSON parsing

48
00:33:35,952 --> 00:33:38,512
but the train which is part of the domain and we should not do that here.

49
00:33:39,024 --> 00:33:45,168
Let's us do that. Yeah, Ok, so do that I have to create

50
00:33:46,960 --> 00:33:49,264
a little [method] to encapsulat the code I want to move.

51
00:33:49,776 --> 00:33:55,920
 This is something that we will do a lot. Extract and Move, Extract the method and move into the proper location.

52
00:33:56,176 --> 00:34:00,784
We do that a lot during the session. The first time we will do it. Ok.

53
00:34:01,040 --> 00:34:03,088
I take all the code I want

54
00:34:03,600 --> 00:34:04,624
To remove, To extract

55
00:34:05,392 --> 00:34:06,416
This one is ok?

56
00:34:06,928 --> 00:34:08,208


57
00:34:09,232 --> 00:34:10,256


58
00:34:10,512 --> 00:34:11,024


59
00:34:11,536 --> 00:34:13,328
One more, Ok. this one. Okey. 

60
00:34:14,352 --> 00:34:17,168
The screen is very high.

61
00:34:20,496 --> 00:34:25,616
So we extract method from that, and it still will be instance method. Yeah.

62
00:34:25,872 --> 00:34:27,408
That

63
00:34:27,664 --> 00:34:28,688
Train topology

64
00:34:28,944 --> 00:34:31,248
Because while passing the JSON.

65
00:34:31,504 --> 00:34:32,016
The thing is

66
00:34:32,528 --> 00:34:35,344
Setting some value to the property of the train

67
00:34:36,112 --> 00:34:37,904
That's a nice method.

68
00:34:38,160 --> 00:34:38,672
 Here?

69
00:34:39,696 --> 00:34:42,256
So who is extracting into a new

70
00:34:42,768 --> 00:34:43,792
Method

71
00:34:44,304 --> 00:34:48,144
Probility to move it to continue to use this? Yeah.

72
00:34:48,656 --> 00:34:52,496
A good way to see if I have some dependency because that I want to move this one

73
00:34:53,008 --> 00:34:56,080
But I don't want to add dependency from this one

74
00:34:56,336 --> 00:34:58,128
I know I want to be insulate

75
00:34:58,384 --> 00:34:58,896
So

76
00:34:59,152 --> 00:35:00,176
I use static

77
00:35:02,992 --> 00:35:04,528
And I have some squeezers.

78
00:35:05,040 --> 00:35:05,552
Squeezes

79
00:35:05,808 --> 00:35:07,344
Here and here because this is static

80
00:35:07,856 --> 00:35:14,000
That's where we tried to change the second test also see if it's static, it make some error.

81
00:35:13,850 --> 00:35:28,790
Yeah so how can we cut these
Yeah relationship

82
00:35:28,790 --> 00:35:38,000
Actually we're trying .....

83
00:35:38,000 --> 00:35:43,460
[Audience Question]

84
00:35:43,460 --> 00:35:49,190
it is a good idea. There is something we can do also it's a so far the if the string is not
empty then I increment the  

85
00:35:49,190 --> 00:35:54,619
the reserve seats instead of changing that
value of kinds of seats from that point

86
00:35:54,619 --> 00:35:59,359
we may be able to cut the behavior
within the property and every time

87
00:35:59,359 --> 00:36:04,640
call the property the property is doing
 the test so it may be one way of

88
00:36:04,640 --> 00:36:11,440
doing it so what do you think? let's try
that and as I set here instead of

89
00:36:11,440 --> 00:36:19,850
letting the method changing the value
 it will be something like 'seat' ..

90
00:36:19,850 --> 00:36:24,640
where... not where.. count

91
00:36:24,640 --> 00:36:31,150
not... Something like that..

92
00:36:31,150 --> 00:36:38,530
Richard so it's a kind of think you for
so much aware of Java streams it's a

93
00:36:38,530 --> 00:36:44,940
more functional way of dealing
with collection and with enumerables

94
00:36:44,940 --> 00:36:49,780
it's not so, here below is writing something like I take the

95
00:36:49,780 --> 00:36:54,910
list of the seats and I count every seat
where that lambda is meaning all seats where they don't have a booking at

96
00:36:57,790 --> 00:37:03,610
first. so okay I can I can
surprise this one
so now you can get rid of that

97
00:37:03,610 --> 00:37:11,140
it will be done at the other level
and this one maybe I can make as
you propose something similar associate

98
00:37:13,840 --> 00:37:18,970
to list of.
yeah, show some that
method into a function actually because

99
00:37:21,040 --> 00:37:32,280
it it may be a static function yeah so I
have a seat I change the signature, like a

100
00:37:32,280 --> 00:37:41,410
list of suits it
okay
and then here I change the local
variable, And now I return seat

101
00:37:47,880 --> 00:37:54,010
so we can extract that method into a
function so that where we call it we get the result directly

102
00:37:54,010 --> 00:38:00,250
so...  we adapt train 
topology
this is a first step

103
00:38:00,250 --> 00:38:05,140
because we have to move it into the
proper location
why is it trend is...

104
00:38:05,140 --> 00:38:12,970
because it's because it's actually.. it's a matter of time

105
00:38:12,970 --> 00:38:19,570
okay, maybe so you
extract the method you make its static function

106
00:38:19,570 --> 00:38:27,070
so we can move it kind of
easily
let's put it....
if you get back to the method

107
00:38:27,070 --> 00:38:31,859
where it has been called
yes
 here we have a get train

108
00:38:37,150 --> 00:38:42,430
yeah
so it might be interesting
instead of having the JSON topology to
get the train
to return a train

109
00:38:44,500 --> 00:38:49,799
maybe we can put that static function into the train data service
yeah

110
00:38:49,799 --> 00:39:03,690
so let's move
so you move the method
into the train data service, okay?

111
00:39:04,270 --> 00:39:08,710
so far we still have a awkward
dependency in the train class but we change it in a second

112
00:39:08,710 --> 00:39:16,260
so you make it to a public
Yes, And

113
00:39:16,260 --> 00:39:22,089
the goal is to change this one
the get train
the get train
I will change the signature
so instead of returning a task of string

114
00:39:25,270 --> 00:39:30,339
yeah touches before it's I
think where of requesting a Web API so

115
00:39:30,339 --> 00:39:38,020
it's kind of actually on that complexity
but...
okay
but you have to read it
it's return a train

116
00:39:38,020 --> 00:39:42,880
yeah
to be better. for the business part

117
00:39:42,880 --> 00:39:49,630
I will to take the train...
okay
so you new train track from the topology

118
00:39:49,630 --> 00:39:57,970
but the train doesn't take the
topology we want to adapt the JSON so
we call it that adaption train topology

119
00:40:04,529 --> 00:40:12,789
but currently the train don't receive... 
you have to change that
yeah

120
00:40:12,789 --> 00:40:17,079
I have to change that also
instead of that
let's accepting a list of seats
yes

121
00:40:17,079 --> 00:40:20,319
so to instantiate a train we will accept
the list of seats which will be much more easy to discussed yet, to play with

122
00:40:20,319 --> 00:40:25,750
yeah and remove this one

123
00:40:25,750 --> 00:40:30,609
so we don't have any kind of references from the train to any kind of train data service

124
00:40:30,609 --> 00:40:38,770
or a structure code you know
so that so
now I can take this one so 'gettrain'

125
00:40:38,770 --> 00:40:42,579
now is returning a train 
so you don't need that anymore

126
00:40:42,579 --> 00:40:47,820
 I can remove this
and here we have some...
Okay yes much better

127
00:40:47,820 --> 00:40:49,620
we asked the train data service to get
a train and we get a train

128
00:40:51,240 --> 00:40:55,530
I compiled because maybe I have
break. yeah I read something

129
00:40:55,530 --> 00:41:00,420
something that buzz me is u nconscious even
if it does not compile it still green

130
00:41:00,420 --> 00:41:07,370
yeah it's a kind of bug I would say. It is a ...  Yes this is a ...

131
00:41:07,370 --> 00:41:11,970
within of test we did enough tests we
have made some ... to a train

132
00:41:11,970 --> 00:41:17,220
from a given JSON for given topology
and this is where we have to do the same

133
00:41:17,220 --> 00:41:24,210
we have to adjust the previous code that
we are expecting to ...

134
00:41:24,210 --> 00:41:32,370
signature to the new one
so, compile, it is ok. 

135
00:41:32,370 --> 00:41:35,130
fine all right
it's okay it's okay and

136
00:41:35,130 --> 00:41:39,600
you come back to ...
let's get back to the ... 
okay so thank you Bruno

137
00:41:39,600 --> 00:41:45,050
yeah
actually we move a topology code that

138
00:41:45,050 --> 00:41:50,030
were part of the train

139
00:41:50,030 --> 00:41:55,430
so I'm much better, much
more comfortable with that code but
there's still lots of things that bother me

140
00:41:57,290 --> 00:42:03,800
for instance let's see the train
 okay you clean the deck you improve the situation

141
00:42:03,800 --> 00:42:13,880
but ok, this is a train what is
it? it's a pure data class without any kind of behaviors without any 
responsibly

142
00:42:13,880 --> 00:42:18,650
 and I'm not aware, maybe it's

143
00:42:18,650 --> 00:42:23,180
a follower that has said
once this kind of object is kind of
teenager object or child object you have to take responsibilities somehow 

144
00:42:25,970 --> 00:42:33,650
and yet, so - let's let's do that

145
00:42:33,650 --> 00:42:39,710
 also we have a concept of seats yeah seat Wow
there is a name for that

146
00:42:39,710 --> 00:42:45,860
yeah actually there is a name for that
kind of domain you have an idea of what

147
00:42:45,860 --> 00:42:57,620
so we are lacking all the
concept of the domain within our code

148
00:42:59,360 --> 00:43:03,950
but when we have we have kind of data class yeah and all of yours in easy that original method

149
00:43:06,800 --> 00:43:12,470
kind of collections fit here very
positive are doing all the logic what I
suggest if you agree is to try to cap some behaviors  

150
00:43:18,200 --> 00:43:22,010
and to put it in the
proper location and try to mass

151
00:43:22,010 --> 00:43:29,300
our child objects
yeah maybe you can
show something about our to check
yeah

152
00:43:29,300 --> 00:43:37,310
maybe we'll slide just since we will do it a lot let's see visually what we will do 
we have a Class A Class B

153
00:43:40,970 --> 00:43:44,990
Class A is a web ticket manager has a method for
instance and the Class B is like say the

154
00:43:44,990 --> 00:43:50,300
train so what we will do a lot
it's to extract code to extract the

155
00:43:50,300 --> 00:43:54,200
behavior and to a method so then we will
have a method
into the same type and then we will move

156
00:43:56,870 --> 00:44:01,310
it into the proper location, the train
for instance and at the end of the day

157
00:44:01,310 --> 00:44:06,560
we will have more actually...
good balance

158
00:44:06,560 --> 00:44:14,030
yeah domain and stuff like that 
okay 
so let me switch back to the code

159
00:44:14,030 --> 00:44:22,970
 so I suggest that we will do that
okay each train reserved seats plus it's the
first business rule, a train should not

160
00:44:25,490 --> 00:44:30,370
exceed maximum capacity of the Train
 I suggest that we extract a method here

161
00:44:30,370 --> 00:44:41,600
but maybe..
if does not exceed overall train's capacity

162
00:44:41,600 --> 00:44:45,260
once you like that are you okay you know
there are you

163
00:44:45,260 --> 00:44:53,450
yeah capacity
sorry I will make us a
non-static method a public one to be
able to move it easily so here I extract

164
00:44:57,380 --> 00:45:07,580
that big if with that method 
where should I move it according to...
the train

165
00:45:07,580 --> 00:45:13,730
yeah and there is a hint if I have said
f6 to move Resharper say okay you pass

166
00:45:13,730 --> 00:45:18,680
an argument a train instance of argument
so you can easily move that behavior to the tain

167
00:45:18,680 --> 00:45:23,780
okay do train I have the train
does not exceed overall train capacity

168
00:45:23,780 --> 00:45:33,950
if I want to request that number of seats 
okay actually what we have here is available seats we are building a list of available seats

169
00:45:36,770 --> 00:45:43,280
 so let us call a
method with find available seats for

170
00:46:02,260 --> 00:46:06,569
actually
there is some concept that we may introduce here
what do think

171
00:46:08,790 --> 00:46:22,530
[Audience Question]

172
00:46:23,119 --> 00:46:28,440
yeah, at the end of the day we need to have seats in a given coach

173
00:46:28,440 --> 00:46:33,500
but before that the domain expert was
talking a lot about reservation attempts

174
00:46:33,500 --> 00:46:40,050
it's a really important concept for him
so I suggest that we instead of just dealing with available seats

175
00:46:40,050 --> 00:46:43,950
let's build something from that part 

176
00:46:50,690 --> 00:46:57,480
before
we are improving the code, Rruno also have something to show you

177
00:46:57,480 --> 00:47:04,319
yeah maybe you some people know and

178
00:47:04,319 --> 00:47:10,589
depend it's a tool to check the
dependency but it exists JArchitect

179
00:47:10,589 --> 00:47:18,569
for Java or C++ 
basically an advanced tools yes it's analyzing your code and

180
00:47:18,569 --> 00:47:25,170
raising some warnings or error and we were
working with Macau in deep

181
00:47:25,170 --> 00:47:31,170
yeah and we asked him to introduce a way to check that code base, follow the

182
00:47:31,170 --> 00:47:35,010
ubiquitous language, it's a prototype

183
00:47:35,010 --> 00:47:41,069
is not a release and we try to imagine you you have a team you have a
legacy code and you know the vocabulary

184
00:47:45,060 --> 00:47:50,520
of the domain expert and create a rule
it's called your code should rely on

185
00:47:50,520 --> 00:47:56,700
your you ubiquit language and we see
we have some problem and as you can see

186
00:47:56,700 --> 00:48:03,240
we have the list of program 
and the world not matching correctly

187
00:48:03,240 --> 00:48:10,530
the cap is there so we have to enter a
list of worlds that are part of our domain

188
00:48:10,530 --> 00:48:16,920
yeah like train etc .. currently we have defined

189
00:48:16,920 --> 00:48:23,430
this list for each domain you want and the tool we tried to check
that so it's still in alpha yeah

190
00:48:27,059 --> 00:48:32,729
but I think it would be interesting where to
make some audit of some 
to have a kind of code smell about that

191
00:48:35,249 --> 00:48:43,949
okay okay 
 so run it
what was the result?

192
00:48:43,949 --> 00:48:52,619
okay so let's get back to to the business 
we have some list of

193
00:48:52,619 --> 00:48:58,079
available seats I suggest that we change the signature that 

194
00:48:58,079 --> 00:49:02,699
we introducing the concept of reservation attempt 
so here instead of returning a

195
00:49:02,699 --> 00:49:13,349
list of seats let's make it return a reservation attempt,
 typo here

196
00:49:13,349 --> 00:49:15,949
thank you

197
00:49:16,730 --> 00:49:24,170
okay yeah okay the type does not exist
so yes I'm aware of that maybe I will

198
00:49:24,170 --> 00:49:37,730
rename it also but here as you can see
sorry ..

199
00:49:37,730 --> 00:49:41,240
the reservation temp type does not
exist yet so let's create it I'll tend
to create a reservation attempt 
okay?

200
00:49:43,670 --> 00:49:54,049
and here since the
function is expecting to return me that

201
00:49:54,049 --> 00:49:59,079
kind of reservation attempt all I have
to do is to install yet here at the end

202
00:49:59,079 --> 00:50:05,510
return a new reservation attempt 
ok?
providing it the list of seats I just found 

203
00:50:05,510 --> 00:50:11,270
all I have to do is to create the
constructor accepting a list of seats for that reservation attempt
 ok？

204
00:50:14,569 --> 00:50:23,690
And that's it
maybe I will need to to walk with the seats

205
00:50:23,690 --> 00:50:29,809
so let me start off creating a field[parameter] seats

206
00:50:29,809 --> 00:50:36,410
Maybe introduce a read property because I will

207
00:50:39,170 --> 00:50:44,869
need to work with the the seats of that reservation attempt
okay?

208
00:50:44,869 --> 00:50:49,819
so we just introduced a reservation attempt which has a property of seats
and that's it

209
00:50:49,819 --> 00:50:55,730
pretty much so that the findavailableseats now the name is maybe 
build reservation temp 

210
00:50:55,730 --> 00:51:02,990
would be better
yeah okay 
so now the method is built reservation attempt 
its find available

211
00:51:05,150 --> 00:51:08,450
seat within the Train and return a
reservation attemp with that
it's okay for everyone
said

212
00:51:12,410 --> 00:51:17,569
so the code is not compiling anymore because I used
to work with the list of seats so what I

213
00:51:17,569 --> 00:51:23,210
need is to rename available seat by
reservation attemp
first step and then to

214
00:51:23,210 --> 00:51:28,820
add the in direction to the seats and to
work with the

215
00:51:28,820 --> 00:51:33,320
the list of the seats
so just let me fill that

216
00:51:33,320 --> 00:51:46,040
three location 
f12
oops 
got seats

217
00:51:46,040 --> 00:51:51,260
should compile let me check
okay it's compiling is still green

218
00:51:51,260 --> 00:51:58,910
so here what I just did is to create a
concept that is directly come from the
domain a reservation attempt and replace

219
00:52:02,300 --> 00:52:07,520
a simple list of seat
okay ?
what can I do here reservation attempt

220
00:52:07,520 --> 00:52:14,000
here it's like saying the

221
00:52:14,000 --> 00:52:18,770
is reservation
attempt fulfilled, the domain expert

222
00:52:18,770 --> 00:52:24,560
talking a lot about that so let's create
a method for that
extract and move

223
00:52:24,560 --> 00:52:31,640
is fulfilled or not

224
00:52:31,640 --> 00:52:37,040
I think it's it's okay for that 
so we asked the reservation attempt are you fullfilled

225
00:52:37,040 --> 00:52:44,510
so first extract still on that
class and then to move it to the up

226
00:52:44,510 --> 00:52:47,530
sorry

227
00:52:47,530 --> 00:52:51,590
I extract to behavior and I put it into
the proper location which is reservationAttempt

228
00:52:51,590 --> 00:52:56,630
let something bother me because you pass twice the seat request count

229
00:52:56,630 --> 00:53:01,400
yeah 
you passed there and pass there 
you actually can provide

230
00:53:01,400 --> 00:53:06,320
the seat requested count once when we construct the reservation attempt so

231
00:53:06,320 --> 00:53:10,250
that we don't need anymore to ask to provide it every time we want to to

232
00:53:10,250 --> 00:53:16,810
check if it's fulfill
let's do that 
okay I agree 
go to implementation

233
00:53:16,810 --> 00:53:21,110
seats requested counts I would provide it
into the constructor of the reservation

234
00:53:21,110 --> 00:53:31,000
attempt here okay sorry I thinking I did a huge mistake

235
00:53:32,100 --> 00:53:38,970
so okay so I changed the constructor of
the reservation attempt I'll tend to add

236
00:53:38,970 --> 00:53:44,520
parameter to the constructor 
yes please sir do that
and seats requested count here

237
00:53:44,520 --> 00:53:49,290
what I can do is simply to keep a
read-only field meaning it's not public

238
00:53:49,290 --> 00:53:53,580
it won't be accessible by the outside
world

239
00:53:53,580 --> 00:53:59,610
now I had it what
I can do is to leverage on it instead

240
00:53:59,610 --> 00:54:06,080
of the one that is provided as argument in the each fulfill so here I replace it

241
00:54:06,080 --> 00:54:14,670
the parameter with the internal field
and now can get safety delete this

242
00:54:14,670 --> 00:54:22,140
parameter since I'm in C# I can
transform it into property expression body

243
00:54:22,140 --> 00:54:31,470
okay let's let's move that now I
think it's okay okay so here getting

244
00:54:31,470 --> 00:54:38,070
back to the each fullfield usage you
see I'm on a reserve method I asked

245
00:54:38,070 --> 00:54:43,620
to build a reservation attempt to the
Train 
oh maybe 
you don't move the BuildReservation on the train

246
00:54:44,070 --> 00:54:49,110
below that I move the build attempt method to the Train

247
00:54:49,110 --> 00:54:54,150
first so let's move
it into the Train so now I can ask the

248
00:54:54,150 --> 00:54:57,750
Train, please train build reservation attempt with that number of

249
00:54:57,750 --> 00:55:02,940
seats I want.
get a reservation attempt
and then if it's fulfilled then I can

250
00:55:02,940 --> 00:55:07,620
continue I can continue to ask the
booking reference and also booking ref

251
00:55:07,620 --> 00:55:13,800
is not part of the domain he said always
booking reference yeah so let's stick to

252
00:55:13,800 --> 00:55:20,580
the domain long edge in that case and
then what we do is to iterate on every
seats of the reservation attempt to

253
00:55:22,170 --> 00:55:28,320
assign the booking refs yeah maybe we
can extract a method here and put it

254
00:55:28,320 --> 00:55:34,010
into the reservation attempt directly
which will be assigned booking refs

255
00:55:34,010 --> 00:55:40,040
which one the

256
00:55:40,420 --> 00:55:44,839
the demo of exacting term
of the domain expert we assign a booking refs

257
00:55:44,839 --> 00:55:48,619
to revervation attempt
ok I extract

258
00:55:48,619 --> 00:55:54,200
the method what will be the next chain
stuff to do to move yeah move to the
reservation attempt
ok so we assign

259
00:55:57,619 --> 00:56:02,930
booking refs to the reservation
attempt 
ok if we look at the
implementation for you to

260
00:56:05,210 --> 00:56:09,650
follow we take that bookingReference and
assign it to every one of the seats of

261
00:56:09,650 --> 00:56:21,020
the bookingRef
ok?
[Audience Question]
 I was thinking the same thing as you

262
00:56:21,020 --> 00:56:28,010
and the domain expert was really saying
the process is to build

263
00:56:28,010 --> 00:56:32,270
a reservation attempt and at the end of the day to transform it into a
reservation so yes but I was the same idea

264
00:56:35,670 --> 00:56:40,400
yeah absolutely

265
00:56:40,400 --> 00:56:47,450
good question 
actually we thought it's
like a technical term build you used to
do it to use it in technical but for the

266
00:56:50,390 --> 00:56:55,730
domain expertise it was still a concept of this realm 
so we have a train caching to save ...

267
00:56:55,730 --> 00:57:02,000
Wow well maybe it's time to morally
have a cache in this application within

268
00:57:02,000 --> 00:57:08,119
this application, yes you can cache everywhere let's see if it's still

269
00:57:08,119 --> 00:57:12,529
relevant here 
ok?
we have a declaration
of the cache here on web ticket manager

270
00:57:12,529 --> 00:57:16,970
then we associate it into the
constructor of the web ticket manager

271
00:57:16,970 --> 00:57:23,930
then we clear it
interesting we clear it
and cause it change the color

272
00:57:23,930 --> 00:57:30,710
it illustrate me that oh it takes 3
second, average of 2 second

273
00:57:30,710 --> 00:57:37,099
to clear the cache I don't know what
it's there but ok I hope it was and then

274
00:57:37,099 --> 00:57:43,700
we save,
 yeah the bookingReference and
the train id, ok. into the cache
and then that's it

275
00:57:48,470 --> 00:57:55,880
so the cache where we only save stuff
but think about our 
maybe it was a

276
00:57:55,880 --> 00:58:02,570
unfinished item,
 maybe that but even
now if we implement correctly it's a

277
00:58:02,570 --> 00:58:05,720
mistake
as we said before

278
00:58:07,849 --> 00:58:16,609
why we cache our topology,
it's a mistake
they can change it

279
00:58:19,250 --> 00:58:25,400
and so yes it's a it's kind of stupid
thing I would say let's get rid

280
00:58:25,400 --> 00:58:33,910
of that, I remove it here I
remove that remove that 
I feel better now 
[Audience Question]

281
00:58:47,720 --> 00:58:53,000
this is the kind of discussion we may have since it's not here we

282
00:58:53,000 --> 00:58:56,210
call it before because it's not the first time we run the session but

283
00:58:56,210 --> 00:59:01,250
yes I will be with that this is
something that we must discuss about the

284
00:59:01,250 --> 00:59:06,200
strategy without talking about technical details but saying that we can memorize

285
00:59:06,200 --> 00:59:18,170
stuff that we get at that time is it
correct according to you 
[Audience Question]
so yeah so ok

286
00:59:18,170 --> 00:59:26,410
we get back to the method we get a train
from train data service

287
00:59:26,410 --> 00:59:31,880
then we have to judge train capacity

288
00:59:31,880 --> 00:59:36,290
if it's not the case we build a reservation attempt yeah then we check

289
00:59:36,290 --> 00:59:42,770
if it's fulfilled or not because we may
run out of seats I see the train is full

290
00:59:42,770 --> 00:59:50,000
for instance or reached the next to the
limit then we ask booking reference service then

291
00:59:50,000 --> 00:59:54,200
we assign the booking reference and
then we booked the seat and then we

292
00:59:54,200 --> 01:00:00,670
return the the result I don't know for
you but now the method is one screen high

293
01:00:00,670 --> 01:00:05,480
we are embracing a little bit more the
concept of the domain
